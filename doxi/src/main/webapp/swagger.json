{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0.0"
  },
  "basePath" : "/doxi/rest",
  "tags" : [ {
    "name" : "DOI API"
  }, {
    "name" : "PID API"
  } ],
  "paths" : {
    "/doi" : {
      "get" : {
        "tags" : [ "DOI API" ],
        "summary" : "Get a list of registered DOIs",
        "description" : "",
        "operationId" : "getDOIList",
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "DOIs sucessfully retrieved.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "DOI, URL or provided metadata have invalid format."
          }
        }
      },
      "put" : {
        "tags" : [ "DOI API" ],
        "summary" : "Generate and register a DOI",
        "description" : "Generates, registers and mints a new DOI. If a certain suffix is required, it can be optionally provided. The DOi in the given metadata XML is overwritten with the generated one.",
        "operationId" : "createAutoOrSuffix",
        "consumes" : [ "text/xml", "application/xml" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "url",
          "in" : "query",
          "description" : "the URL to which this DOI should point",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "suffix",
          "in" : "query",
          "description" : "an optional suffix",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the metadata of this DOI in XML format. The identifier tag in the XML must be empty, it will automatically be filled with the generated DOI.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "DOI sucessfully created.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "DOI, URL or provided metadata have invalid format."
          },
          "409" : {
            "description" : "DOI already exists."
          }
        }
      }
    },
    "/doi/{doi}" : {
      "get" : {
        "tags" : [ "DOI API" ],
        "summary" : "Get Metadata and URL of a DOI",
        "description" : "",
        "operationId" : "getDOI",
        "produces" : [ "application/xml" ],
        "parameters" : [ {
          "name" : "doi",
          "in" : "path",
          "description" : "the DOI",
          "required" : true,
          "type" : "string",
          "pattern" : "10\\..+/.+"
        } ],
        "responses" : {
          "200" : {
            "description" : "DOI sucessfully retrieved.",
            "schema" : {
              "type" : "string"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "the URL of this DOI"
              }
            }
          },
          "400" : {
            "description" : "DOI, URL or provided metadata have invalid format."
          }
        }
      },
      "post" : {
        "tags" : [ "DOI API" ],
        "summary" : "Update an existing DOI",
        "description" : "Updates an existing DOI with a new URL and new metadata.",
        "operationId" : "updateDOI",
        "consumes" : [ "text/xml", "application/xml" ],
        "produces" : [ "application/xml" ],
        "parameters" : [ {
          "name" : "doi",
          "in" : "path",
          "description" : "the DOI to be updated",
          "required" : true,
          "type" : "string",
          "pattern" : "10\\..+/.+"
        }, {
          "name" : "url",
          "in" : "query",
          "description" : "the new URL",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the new metadata",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "DOI sucessfully updated.",
            "schema" : {
              "type" : "string"
            },
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "the URL of this DOI"
              }
            }
          },
          "400" : {
            "description" : "DOI, URL or provided metadata have invalid format."
          }
        }
      },
      "put" : {
        "tags" : [ "DOI API" ],
        "summary" : "Register a DOI with known value",
        "description" : "Registers and mints a concrete DOI. The DOi in the given metadata XML is overwritten with the one provided in the path.",
        "operationId" : "create",
        "consumes" : [ "text/xml", "application/xml" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "doi",
          "in" : "path",
          "description" : "the DOI to be registered",
          "required" : true,
          "type" : "string",
          "pattern" : "10\\..+/.+"
        }, {
          "name" : "url",
          "in" : "query",
          "description" : "the URL to which this DOI should point",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the metadata of this DOI in XML format. The identifier tag in the XML must either match the provided DOI or be empty (will be filled with provided DOI).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "DOI sucessfully created.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "DOI, URL or provided metadata have invalid format."
          },
          "409" : {
            "description" : "DOI already exists."
          }
        }
      },
      "delete" : {
        "tags" : [ "DOI API" ],
        "summary" : "Deactivate a DOI",
        "description" : "",
        "operationId" : "inactivate",
        "produces" : [ "application/xml" ],
        "parameters" : [ {
          "name" : "doi",
          "in" : "path",
          "description" : "the DOI to be inactivated",
          "required" : true,
          "type" : "string",
          "pattern" : "10\\..+/.+"
        } ],
        "responses" : {
          "200" : {
            "description" : "DOI sucessfully inactivated.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Problem with inactivation."
          }
        }
      }
    },
    "/pid/cache/size" : {
      "get" : {
        "tags" : [ "PID API" ],
        "summary" : "Returns the current size of the Pid Cache.",
        "description" : "",
        "operationId" : "cacheSize",
        "consumes" : [ "text/plain" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Size found.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Size not found."
          }
        }
      }
    },
    "/pid/create" : {
      "post" : {
        "tags" : [ "PID API" ],
        "summary" : "Generates and register a Pid with known URL.",
        "description" : "ATTENTION: The Pid is saved only in the Pid Queue. If the Pid with URL already exists at GWDG it cannot be created!",
        "operationId" : "create",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "url",
          "in" : "formData",
          "description" : "the URL to which the PID should point",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "PID created.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "PID not created."
          }
        }
      }
    },
    "/pid/queue/size" : {
      "get" : {
        "tags" : [ "PID API" ],
        "summary" : "Returns the current size of the Pid Queue.",
        "description" : "",
        "operationId" : "queueSize",
        "consumes" : [ "text/plain" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Size found.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Size not found."
          }
        }
      }
    },
    "/pid/retrieve" : {
      "get" : {
        "tags" : [ "PID API" ],
        "summary" : "Retrieves a Pid with known ID.",
        "description" : "",
        "operationId" : "retrieve",
        "consumes" : [ "text/plain" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "the ID which should be retrieved",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PID found.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "PID not found."
          }
        }
      }
    },
    "/pid/search" : {
      "get" : {
        "tags" : [ "PID API" ],
        "summary" : "Searches a Pid with known URL.",
        "description" : "",
        "operationId" : "search",
        "consumes" : [ "text/plain" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "url",
          "in" : "query",
          "description" : "the URL which should be searched",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PID found.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "PID not found."
          }
        }
      }
    },
    "/pid/update" : {
      "put" : {
        "tags" : [ "PID API" ],
        "summary" : "Updates an existing Pid.",
        "description" : "ATTENTION: The Pid is updated only in the Pid Queue. If the Pid does not exist at GWDG it cannot be updated!",
        "operationId" : "update",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "formData",
          "description" : "the ID of the existing Pid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "url",
          "in" : "formData",
          "description" : "the URL to which the PID should point",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PID updated.",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "PID not updated."
          }
        }
      }
    }
  }
}